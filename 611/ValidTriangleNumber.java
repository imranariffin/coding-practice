import java.util.Arrays;

public class ValidTriangleNumber {
	public static int triangleNumber(int[] nums) {
		if (nums.length < 3) return 0;

		Arrays.sort(nums);
		int ret = 0;
		int n = nums.length;
		for (int i=0; i<n-2; i++) {
			for (int j=i+1; j<n-1; j++) {
				int sum = nums[i] + nums[j];
				int left = j, right = n;
				while (right - left > 1) {
					int mid = (left + right) >> 1;
					if (nums[mid] < sum) {
						left = mid;
					} else {
						right = mid;
					}
				}
				ret += left - j;
			}
		}
		return ret;
	}

	public static void main(String[] args) {
		int[] nums = {100,14,87,80,42,40,50,62,58,73,84,76,35,84,69,83,24,31,51,53,69,71,13,92,42,65,19,36,30,96,23,57,94,95,41,64,54,48,48,23,49,76,23,89,50,73,35,20,32,81,97,98,55,36,52,94,96,65,31,78,76,44,20,96,89,36,40,80,19,77,87,49,29,26,58,96,90,46,86,46,24,71,19,91,78,90,66,98,50,99,97,41,59,51,91,81,60,62,52,35,14,37,79,24,74,74,77,63,100,76,88,87,28,99,77,48,12,40,89,14,68,10,82,60,88,55,83,96,90,52,50,90,77,27,70,71,12,32,50,19,48,78,78,12,54,78,96,98,68,52,86,89,96,61,34,16,69,98,81,80,71,97,64,34,10,32,79,80,83,98,85,53,36,53,77,64,37,46,67,51,47,84,56,16,11,29,87,70,86,37,27,20,31,49,64,73,10,80,80,99,11,11,78,86,65,30,74,45,10,91,46,59,41,17,40,14,46,83,86,47,38,33,46,60,46,18,27,93,12,60,13,27,62,76,15,70,56,96,51,30,83,30,76,67,50,78,53,86,82,95,57,12,86,21,33,67,95,19,71,53,10,19,56,25,21,22,19,96,71,31,72,34,32,81,12,32,80,66,23,92,48,43,31,21,63,39,19,83,63,42,13,29,28,76,13,62,51,37,20,24,57,79,74,77,85,86,14,38,91,35,53,86,85,75,77,75,11,17,36,29,64,88,90,35,40,38,24,95,98,100,96,39,84,98,98,89,51,91,91,94,94,29,55,30,35,95,39,79,65,93,76,100,19,14,77,51,54,25,20,86,62,67,66,17,77,50,30,25,58,21,32,44,67,15,32,53,28,51,27,68,13,14,44,55,94,40,44,22,23,46,52,83,86,30,16,50,28,53,84,75,50,87,36,78,21,84,15,44,47,78,17,10,81,40,16,43,93,71,17,44,62,64,27,31,99,97,13,26,82,86,21,46,27,89,70,86,89,92,48,14,59,52,60,48,77,39,84,100,71,64,93,67,57,56,98,34,38,20,10,18,19,76,66,91,84,12,32,86,56,69,23,86,30,48,97,91,13,17,10,30,11,14,82,32,96,56,25,79,82,63,93,51,26,61,58,55,17,54,78,57,82,16,30,93,56,37,17,42,38,28,62,45,31,43,64,11,39,19,68,61,26,38,41,27,61,17,78,42,36,95,71,75,100,12,42,71,83,33,71,61,18,42,92,93,75,28,89,57,18,45,44,28,93,80,36,19,11,84,11,51,73,21,16,74,90,12,26,48,53,76,16,65,94,86,11,55,21,35,12,49,31,22,92,51,17,73,91,62,36,42,56,50,68,72,80,45,90,19,13,53,92,34,76,24,81,61,55,63,66,28,30,44,32,58,22,42,76,13,18,46,92,22,92,78,29,10,37,29,39,26,19,29,10,40,40,61,99,98,40,78,61,15,43,81,59,36,68,53,30,47,23,56,45,73,90,61,36,65,24,71,57,25,22,70,94,91,84,87,20,16,93,19,32,34,72,46,31,10,56,95,46,80,63,15,77,62,58,64,57,23,84,12,60,82,65,96,40,67,98,20,75,60,42,69,58,32,86,95,22,61,54,22,86,56,100,24,61,92,100,94,34,29,47,49,67,68,60,76,86,53,77,46,52,100,14,32,99,26,79,82,18,11,88,23,20,39,92,48,76,94,67,17,10,85,41,14,28,22,51,92,27,62,58,41,67,98,98,24,24,60,100,98,46,49,35,34,23,31,69,82,40,79,83,72,49,80,78,60,97,36,58,48,34,12,80,42,40,78,79,53,18,46,68,95,84,41,38,58,41,10,29,59,98,59,96,42,45,56,26,54,70,47,82,29,57,23,79,92,29,22,36,91,13,41,100,16,66,33,43,61,46,53,95,80,36,35,69,100,94,46,95,79,58,79,97,26,57,62,46,53,68,77,64,89,93,46,69,58,57,30,38,71,96,57,39,94,85,61,26,49,39,80,10,86,68,60,18,35,36,38,99,59,75,58,26,16,31,83,24,41,33,62,54,46,29,38,75,84,36,76,55,95,79,22,72,22,69,50,52,11,18,20,43,46,20,24,78,29,23,98,14,38,81,60,97,82,71,83,21,20,63,34,34,55,36,25,44,84,46,73,58,54,57,75,42,15,63,36,25,66,92,24,53,86,10,86,50,97,53,53,67,92,48,56,68,45,65,85,32,32,92,21,10,77,39,89,84,71,33,75,17,51,93,23,76,90,70,49,41,51};
		System.out.println(triangleNumber(nums));
	}
}

/*
Binary Search solution by lympanda

class Solution {
public:
    int triangleNumber(vector<int>& a) {
      int i,j,k,n,left,right,mid,ans,sum;
      ans=0;
      sort(a.begin(),a.end());
      n=a.size();
      for (i=0;i<n;i++)
        for (j=i+1;j<n;j++)
        {
          sum=a[i]+a[j];
          left=j;right=n;
          while (right-left>1)
          {
            mid=(left+right)/2;
            if (a[mid]>=sum) right=mid;
            else left=mid;
          }
          ans+=left-j;
        }
      return ans;
    }
};
*/